
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - allow users to read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow admins to read all user profiles
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Help requests - allow authenticated users to create, admins to read all
    match /help_requests/{requestId} {
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.keys().hasAll(['userId', 'userEmail', 'userName', 'type', 'description', 'location', 'status', 'priority', 'createdAt']);
      
      allow read, update: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'));
    }
    
    // SOS alerts - allow authenticated users to create, admins to read/update all
    match /sos_alerts/{alertId} {
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.keys().hasAll(['userId', 'userName', 'userPhone', 'location', 'locationString', 'timestamp', 'status', 'type', 'priority']);
      
      allow read, update: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'));
    }
    
    // Volunteers - allow authenticated users to register as volunteers
    match /volunteers/{volunteerId} {
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.keys().hasAll(['name', 'userId', 'skills', 'location', 'contact', 'availability', 'rating', 'createdAt']);
      
      allow read: if request.auth != null;
      
      allow update: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'));
    }
    
    // Food points - allow authenticated users to create food donation posts
    match /food_points/{foodId} {
      allow create: if request.auth != null && 
        request.resource.data.donorId == request.auth.uid &&
        request.resource.data.keys().hasAll(['title', 'description', 'location', 'contactInfo', 'donorId', 'donorName', 'status', 'timestamp']);
      
      allow read: if request.auth != null;
      
      allow update: if request.auth != null && 
        (resource.data.donorId == request.auth.uid || 
         (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'));
    }
    
    // Lost and Found - allow authenticated users to report lost/found items
    match /lost_found/{itemId} {
      allow create: if request.auth != null && 
        request.resource.data.reportedBy == request.auth.uid &&
        request.resource.data.keys().hasAll(['title', 'description', 'location', 'status', 'reportedBy', 'reporterName', 'contactInfo', 'timestamp']);
      
      allow read: if request.auth != null;
      
      allow update: if request.auth != null && 
        (resource.data.reportedBy == request.auth.uid || 
         (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'));
    }
    
    // Emergency alerts - only admins can create/update, all authenticated users can read
    match /emergency_alerts/{alertId} {
      allow read: if request.auth != null;
      
      allow create, update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Navigation routes - allow authenticated users to read, admins to manage
    match /navigation_routes/{routeId} {
      allow read: if request.auth != null;
      
      allow create, update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Health units - allow authenticated users to read, admins to manage
    match /health_units/{unitId} {
      allow read: if request.auth != null;
      
      allow create, update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Location status & crowd density - allow authenticated users to read, admins to manage
    match /location_status/{locationId} {
      allow read: if request.auth != null;
      
      allow create, update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Surveillance cameras - allow authenticated users to read, admins to manage
    match /surveillance_cameras/{cameraId} {
      allow read: if request.auth != null;
      
      allow create, update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Analytics data - only admins can read/write
    match /analytics/{docId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Default rule - deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
